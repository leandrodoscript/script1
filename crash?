local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("leandro gui", "BloodTheme")

--Main
local Tab = Window:NewTab("scripts")
local Section = Tab:NewSection("scripts random")


Section:NewButton("FlingALL", "Sirve para mandar a volar a todos los jugadores", function()
    loadstring(game:HttpGet('https://github.com/DigitalityScripts/roblox-scripts/raw/main/loop fling all'))()
end)

Section:NewButton("Infinte Yield", "Comandos", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

Section:NewButton("InstaKill", "Cualquier jugador que toques con un objeto morira al tocar kill", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/v8PX741z"))()
end)

Section:NewButton("perna grande", "Hace que te crezcan mucho la mano y la pierna", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DigitalityScripts/roblox-scripts/main/Leg%20Resize'))()
end)

Section:NewButton("Hat Fling", "Convierte tu sombrero en un Sombrero Volador que manda a volar al que te toque", function()
    loadstring(game:HttpGet('https://gist.githubusercontent.com/1BlueCat/544f7efbe88235666b5b7add65b7344d/raw/f20804bb85542dcc3bc938982e1f05b7ff05cded/FE%2520Hat%2520Fling'))()
end)

Section:NewButton("Fly", "Hace que vueles mas rapido", function()
    game:GetService("StarterGui"):SetCore("SendNotification",{

                Title = "Credits";

                Text = "Modified By SpekzZ";
                Duration = 3.5;
            })
-- Gui to Lua
-- Version: 3.2

-- Instances:

local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local onof = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local plus = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local mine = Instance.new("TextButton")

--Properties:

main.Name = "main"
main.Parent = game.CoreGui
main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(163, 255, 137)
Frame.BorderColor3 = Color3.fromRGB(103, 221, 213)
Frame.Position = UDim2.new(0.100320168, 0, 0.379746825, 0)
Frame.Size = UDim2.new(0, 190, 0, 57)

up.Name = "up"
up.Parent = Frame
up.BackgroundColor3 = Color3.fromRGB(79, 255, 152)
up.Size = UDim2.new(0, 44, 0, 28)
up.Font = Enum.Font.SourceSans
up.Text = "UP"
up.TextColor3 = Color3.fromRGB(0, 0, 0)
up.TextSize = 14.000

down.Name = "down"
down.Parent = Frame
down.BackgroundColor3 = Color3.fromRGB(215, 255, 121)
down.Position = UDim2.new(0, 0, 0.491228074, 0)
down.Size = UDim2.new(0, 44, 0, 28)
down.Font = Enum.Font.SourceSans
down.Text = "DOWN"
down.TextColor3 = Color3.fromRGB(0, 0, 0)
down.TextSize = 14.000

onof.Name = "onof"
onof.Parent = Frame
onof.BackgroundColor3 = Color3.fromRGB(255, 249, 74)
onof.Position = UDim2.new(0.702823281, 0, 0.491228074, 0)
onof.Size = UDim2.new(0, 56, 0, 28)
onof.Font = Enum.Font.SourceSans
onof.Text = "fly"
onof.TextColor3 = Color3.fromRGB(0, 0, 0)
onof.TextSize = 14.000

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(242, 60, 255)
TextLabel.Position = UDim2.new(0.469327301, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 100, 0, 28)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Fly Gui V2"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

plus.Name = "plus"
plus.Parent = Frame
plus.BackgroundColor3 = Color3.fromRGB(133, 145, 255)
plus.Position = UDim2.new(0.231578946, 0, 0, 0)
plus.Size = UDim2.new(0, 45, 0, 28)
plus.Font = Enum.Font.SourceSans
plus.Text = "+"
plus.TextColor3 = Color3.fromRGB(0, 0, 0)
plus.TextScaled = true
plus.TextSize = 14.000
plus.TextWrapped = true

speed.Name = "speed"
speed.Parent = Frame
speed.BackgroundColor3 = Color3.fromRGB(255, 85, 0)
speed.Position = UDim2.new(0.468421042, 0, 0.491228074, 0)
speed.Size = UDim2.new(0, 44, 0, 28)
speed.Font = Enum.Font.SourceSans
speed.Text = "1"
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.TextScaled = true
speed.TextSize = 14.000
speed.TextWrapped = true

mine.Name = "mine"
mine.Parent = Frame
mine.BackgroundColor3 = Color3.fromRGB(123, 255, 247)
mine.Position = UDim2.new(0.231578946, 0, 0.491228074, 0)
mine.Size = UDim2.new(0, 45, 0, 29)
mine.Font = Enum.Font.SourceSans
mine.Text = "-"
mine.TextColor3 = Color3.fromRGB(0, 0, 0)
mine.TextScaled = true
mine.TextSize = 14.000
mine.TextWrapped = true

speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

	if nowe == true then
		nowe = false

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	else 
		nowe = true



		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end




	
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.LowerTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false



	





end)


up.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,0)
	
end)


down.MouseButton1Down:connect(function()

	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-2,0)

end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
	wait(0.7)
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	game.Players.LocalPlayer.Character.Animate.Disabled = false

end)


plus.MouseButton1Down:connect(function()
	speeds = speeds + 1
	speed.Text = speeds
	if nowe == true then
		

	tpwalking = false
	for i = 1, speeds do
		spawn(function()

			local hb = game:GetService("RunService").Heartbeat	


			tpwalking = true
			local chr = game.Players.LocalPlayer.Character
			local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
			while tpwalking and hb:Wait() and chr and hum and hum.Parent do
				if hum.MoveDirection.Magnitude > 0 then
					chr:TranslateBy(hum.MoveDirection)
				end
			end

		end)
		end
		end
end)
mine.MouseButton1Down:connect(function()
	if speeds == 1 then
		speed.Text = 'can not be less than 1'
		wait(1)
		speed.Text = speeds
	else
	speeds = speeds - 1
		speed.Text = speeds
		if nowe == true then
	tpwalking = false
	for i = 1, speeds do
		spawn(function()

			local hb = game:GetService("RunService").Heartbeat	


			tpwalking = true
			local chr = game.Players.LocalPlayer.Character
			local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
			while tpwalking and hb:Wait() and chr and hum and hum.Parent do
				if hum.MoveDirection.Magnitude > 0 then
					chr:TranslateBy(hum.MoveDirection)
				end
			end

		end)
		end
		end
		end
end)
end)

Section:NewButton("SPY", "Para espiar chat privado", function()
    --This script reveals ALL hidden messages in the default chat
--chat "/spy" to toggle!
enabled = true
--if true will check your messages too
spyOnMyself = true
--if true will chat the logs publicly (fun, risky)
public = false
--if true will use /me to stand out
publicItalics = true
--customize private logs
privateProperties = {
	Color = Color3.fromRGB(0,255,255); 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}
--////////////////////////////////////////////////////////////////
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

local function onChatted(p,msg)
	if _G.chatSpyInstance == instance then
		if p==player and msg:lower():sub(1,4)=="/spy" then
			enabled = not enabled
			wait(0.3)
			privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
			StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
		elseif enabled and (spyOnMyself==true or p~=player) then
			msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
			local hidden = true
			local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
				if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
					hidden = false
				end
			end)
			wait(1)
			conn:Disconnect()
			if hidden and enabled then
				if public then
					saymsg:FireServer((publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
				else
					privateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
					StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
				end
			end
		end
	end
end

for _,p in ipairs(Players:GetPlayers()) do
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end
Players.PlayerAdded:Connect(function(p)
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end)
privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
local chatFrame = player.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
--Credit to O Plays on Youtube, go subscribe to him (not my account, just advertising for him, we don't even know eachother lol)
end)

--Player
local Player = Window:NewTab("speed")
local PlayerSection = Player:NewSection("speed")

PlayerSection:NewSlider("Speed", "Max 100 Minimo 35", 100, 35, function(s) -- 500 (MaxValue) | 35 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

PlayerSection:NewSlider("JumpPower", "Max 200 Minimo 65", 200, 65, function(s) -- 500 (MaxValue) | 35 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

Section:NewButton("God_Mode", "Te convierte en inmortal sin cambiar tu avatar ni animaciones", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/NotFalxe/Roblox-Scripts/source-code/headfling.lua'),true))()
end)

Section:NewButton("tradutor", "UwU", function()
    --[[
    Message Translator
    Made by Aim, updated by evn
    Credits to Riptxde for the sending chathook
--]]

if not game['Loaded'] then game['Loaded']:Wait() end; repeat wait(.06) until game:GetService('Players').LocalPlayer ~= nil
local YourLang = "es" -- Language code that the messages are going to be translated to

local googlev = isfile'googlev.txt' and readfile'googlev.txt' or ''
local request = request or syn.request

local function outputHook(fnc)
    return function(...)
        return fnc('[INLINE TRANSLATOR]', ...)
    end
end

local print,warn = outputHook(print), outputHook(warn)

-- // GOOGLE TRANSLATE // --

local translate, getISOCode do
    function googleConsent(Body) -- Because google really said: "Fuck you."
        local args = {}

        for match in Body:gmatch('<input type="hidden" name=".-" value=".-">') do
            local k,v = match:match('<input type="hidden" name="(.-)" value="(.-)">')
            args[k] = v
        end
        googlev = args.v
        writefile('googlev.txt', args.v)
    end

    local function got(url, Method, Body) -- Basic version of https://www.npmjs.com/package/got using synapse's request API for google websites
        Method = Method or "GET"
        
        local res = request({
            Url = url,
            Method = Method,
            Headers = {cookie="CONSENT=YES+"..googlev},
            Body = Body
        })
        
        if res.Body:match('https://consent.google.com/s') then
            print('consent')
            googleConsent(res.Body)
            res = request({
                Url = url,
                Method = "GET",
                Headers = {cookie="CONSENT=YES+"..googlev}
            })
        end
        
        return res
    end

    local languages = {
        auto = "Automatic",
        af = "Afrikaans",
        sq = "Albanian",
        am = "Amharic",
        ar = "Arabic",
        hy = "Armenian",
        az = "Azerbaijani",
        eu = "Basque",
        be = "Belarusian",
        bn = "Bengali",
        bs = "Bosnian",
        bg = "Bulgarian",
        ca = "Catalan",
        ceb = "Cebuano",
        ny = "Chichewa",
        ['zh-cn'] = "Chinese Simplified",
        ['zh-tw'] = "Chinese Traditional",
        co = "Corsican",
        hr = "Croatian",
        cs = "Czech",
        da = "Danish",
        nl = "Dutch",
        en = "English",
        eo = "Esperanto",
        et = "Estonian",
        tl = "Filipino",
        fi = "Finnish",
        fr = "French",
        fy = "Frisian",
        gl = "Galician",
        ka = "Georgian",
        de = "German",
        el = "Greek",
        gu = "Gujarati",
        ht = "Haitian Creole",
        ha = "Hausa",
        haw = "Hawaiian",
        iw = "Hebrew",
        hi = "Hindi",
        hmn = "Hmong",
        hu = "Hungarian",
        is = "Icelandic",
        ig = "Igbo",
        id = "Indonesian",
        ga = "Irish",
        it = "Italian",
        ja = "Japanese",
        jw = "Javanese",
        kn = "Kannada",
        kk = "Kazakh",
        km = "Khmer",
        ko = "Korean",
        ku = "Kurdish (Kurmanji)",
        ky = "Kyrgyz",
        lo = "Lao",
        la = "Latin",
        lv = "Latvian",
        lt = "Lithuanian",
        lb = "Luxembourgish",
        mk = "Macedonian",
        mg = "Malagasy",
        ms = "Malay",
        ml = "Malayalam",
        mt = "Maltese",
        mi = "Maori",
        mr = "Marathi",
        mn = "Mongolian",
        my = "Myanmar (Burmese)",
        ne = "Nepali",
        no = "Norwegian",
        ps = "Pashto",
        fa = "Persian",
        pl = "Polish",
        pt = "Portuguese",
        pa = "Punjabi",
        ro = "Romanian",
        ru = "Russian",
        sm = "Samoan",
        gd = "Scots Gaelic",
        sr = "Serbian",
        st = "Sesotho",
        sn = "Shona",
        sd = "Sindhi",
        si = "Sinhala",
        sk = "Slovak",
        sl = "Slovenian",
        so = "Somali",
        es = "Spanish",
        su = "Sundanese",
        sw = "Swahili",
        sv = "Swedish",
        tg = "Tajik",
        ta = "Tamil",
        te = "Telugu",
        th = "Thai",
        tr = "Turkish",
        uk = "Ukrainian",
        ur = "Urdu",
        uz = "Uzbek",
        vi = "Vietnamese",
        cy = "Welsh",
        xh = "Xhosa",
        yi = "Yiddish",
        yo = "Yoruba",
        zu = "Zulu"
    };

    function find(lang)
        for i,v in pairs(languages) do
            if i == lang or v == lang then
                return i
            end
        end
    end

    function isSupported(lang)
        local key = find(lang)
        return key and true or false 
    end

    function getISOCode(lang)
        local key = find(lang)
        return key
    end

    function stringifyQuery(dataFields)
        local data = ""
        for k, v in pairs(dataFields) do
            if type(v) == "table" then
                for _,v in pairs(v) do
                    data = data .. ("&%s=%s"):format(
                        game.HttpService:UrlEncode(k),
                        game.HttpService:UrlEncode(v)
                    )
                end
            else
                data = data .. ("&%s=%s"):format(
                    game.HttpService:UrlEncode(k),
                    game.HttpService:UrlEncode(v)
                )
            end
        end
        data = data:sub(2)
        return data
    end

    local reqid = math.random(1000,9999)
    local rpcidsTranslate = "MkEWBc"
    local rootURL = "https://translate.google.com/"
    local executeURL = "https://translate.google.com/_/TranslateWebserverUi/data/batchexecute"
    local fsid, bl

    do -- init
        print('initialize')
        local InitialReq = got(rootURL)
        fsid = InitialReq.Body:match('"FdrFJe":"(.-)"')
        bl = InitialReq.Body:match('"cfb2h":"(.-)"')
    end

    local HttpService = game:GetService("HttpService")
    function jsonE(o)
        return HttpService:JSONEncode(o)
    end
    function jsonD(o)
        return HttpService:JSONDecode(o)
    end

    function translate(str, to, from)
        reqid+=10000
        from = from and getISOCode(from) or 'auto'
        to = to and getISOCode(to) or 'en'

        local data = {{str, from, to, true}, {nil}}

        local freq = {
            {
                {
                    rpcidsTranslate, 
                    jsonE(data),
                    nil,
                    "generic"
                }
            }
        }

        local url = executeURL..'?'..stringifyQuery{rpcids = rpcidsTranslate, ['f.sid'] = fsid, bl = bl, hl="en", _reqid = reqid-10000, rt = 'c'}
        local body = stringifyQuery{['f.req'] = jsonE(freq)}
        
        local req = got(url, "POST", body)
        
        local body = jsonD(req.Body:match'%[.-%]\n')
        local translationData = jsonD(body[1][3])
        local result = {
            text = "",
            from = {
                language = "",
                text = ""
            },
            raw = ""
        }
        result.raw = translationData
        result.text = translationData[2][1][1][6][1][1]
        
        result.from.language = translationData[3]
        result.from.text = translationData[2][5][1]

        return result
    end
end

local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local StarterGui = game:GetService('StarterGui')
for i=1, 15 do
    local r = pcall(StarterGui["SetCore"])
    if r then break end
    game:GetService('RunService').RenderStepped:wait()
end
wait()

local properties = {
    Color = Color3.new(1,1,0);
    Font = Enum.Font.SourceSansItalic;
    TextSize = 16;
}

game:GetService("StarterGui"):SetCore("SendNotification",
    {
        Title = "Chat Translator",
        Text = "Ported to Google Translate",
        Duration = 3
    }
)
                  
properties.Text = "[TR] To send messages in a language, say > followed by the target language/language code, e.g.: >ru or >russian. To disable (go back to original language), say >d."
StarterGui:SetCore("ChatMakeSystemMessage", properties)

function translateFrom(message)
    local translation = translate(message, YourLang)

    local text
    if translation.from.language ~= YourLang then 
        text = translation.text
    end

    return {text, translation.from.language}
end

-- // CHAT FUNCTIONS // --

local CBar, Connected = LP['PlayerGui']:WaitForChild('Chat')['Frame'].ChatBarParentFrame['Frame'].BoxFrame['Frame'].ChatBar, {}
local EventFolder = game:GetService('ReplicatedStorage'):WaitForChild('DefaultChatSystemChatEvents')
local Chat do
    function Chat(Original, msg, Channel)
        CBar.Text = msg
        for i,v in pairs(getconnections(CBar.FocusLost)) do
            v:Fire(true, nil, true)
        end
    end

    --[[
    local ChatMain = LP.PlayerScripts:FindFirstChild('ChatMain', true)
    local MessageSender if ChatMain then
        MessageSender = require(ChatMain.MessageSender)
        ChatMain = require(ChatMain)
    end

    function Chat(Original, msg, Channel)
        Channel = Channel or "All"
        if MessageSender and ChatMain then
            ChatMain.MessagePosted:fire(Original)
            MessageSender:SendMessage(msg, Channel)
        else
            if not _G.SecureChat then
                game:GetService('Players'):Chat(Original); 
            end
            EventFolder.SayMessageRequest:FireServer(msg, Channel)
        end
    end]]
end

do -- :Chatted replacement!!
    function get(plr, msg)
        print(msg)
        local tab = translateFrom(msg)
        local translation = tab[1]
        print(translation)
        if translation then
            properties.Text = "("..tab[2]:upper()..") ".."[".. plr .."]: "..translation
            StarterGui:SetCore("ChatMakeSystemMessage", properties)
        end
    end

    EventFolder:WaitForChild("OnMessageDoneFiltering").OnClientEvent:Connect(function(data)
        if data == nil then return end

        local plr = Players:FindFirstChild(data.FromSpeaker)
        local msg = tostring(data.Message)
        local originalchannel = tostring(data.OriginalChannel)

        if plr then 
            plr = plr.DisplayName 
        else 
            plr = tostring(data.FromSpeaker)
        end

        if originalchannel:find("To ") then
            plr = plr..originalchannel
        end

        get(plr, msg)
    end)
end

local sendEnabled = false
local target = ""

function translateTo(message, target)
    target = target:lower() 
    local translation = translate(message, target, "auto")

    return translation.text
end

function disableSend()
    sendEnabled = false
    properties.Text = "[TR] Sending Disabled"
    StarterGui:SetCore("ChatMakeSystemMessage", properties)
end


local HookChat = function(Bar)
    coroutine.wrap(function()
        if not table.find(Connected,Bar) then
            local Connect = Bar['FocusLost']:Connect(function(Enter, _, ignore)
                if ignore then return end
                if Enter ~= false and Bar.Text ~= '' then
                    local Message = Bar.Text
                    Bar.Text = ''
                    if Message == ">d" then
                        disableSend()
                    elseif Message:sub(1,1) == ">" and not Message:find(" ") then
                        if getISOCode(Message:sub(2)) then
                            sendEnabled = true
                            target = Message:sub(2)
                        else
                            properties.Text = "[TR] Invalid language"
                            StarterGui:SetCore("ChatMakeSystemMessage", properties)
                        end
                    elseif sendEnabled and not (Message:sub(1,3) == "/e " or Message:sub(1,7) == "/emote ") then
                        local og = Message
                        Message = translateTo(Message, target)
                        --Bar.Text = Message
                        Chat(og, Message)
                    else
                        --Bar.Text = Message
                        Chat(Message, Message)
                    end
                end
            end)
            Connected[#Connected+1] = Bar; Bar['AncestryChanged']:Wait(); Connect:Disconnect()
        end
    end)()
end

HookChat(CBar); local BindHook = Instance.new('BindableEvent')

local MT = getrawmetatable(game); local NC = MT.__namecall; setreadonly(MT, false)

MT.__namecall = newcclosure(function(...)
    local Method, Args = getnamecallmethod(), {...}
    if rawequal(tostring(Args[1]),'ChatBarFocusChanged') and rawequal(Args[2],true) then 
        if LP['PlayerGui']:FindFirstChild('Chat') then
            BindHook:Fire()
        end
    end
    return NC(...)
end)

BindHook['Event']:Connect(function()
    CBar = LP['PlayerGui'].Chat['Frame'].ChatBarParentFrame['Frame'].BoxFrame['Frame'].ChatBar
    HookChat(CBar)
end)
--[[
af = "Afrikaans",
    sq = "Albanian",
    am = "Amharic",
    ar = "Arabic",
    hy = "Armenian",
    az = "Azerbaijani",
    eu = "Basque",
    be = "Belarusian",
    bn = "Bengali",
    bs = "Bosnian",
    bg = "Bulgarian",
    ca = "Catalan",
    ceb = "Cebuano",
    ny = "Chichewa",
    ['zh-cn'] = "Chinese Simplified",
    ['zh-tw'] = "Chinese Traditional",
    co = "Corsican",
    hr = "Croatian",
    cs = "Czech",
    da = "Danish",
    nl = "Dutch",
    en = "English",
    eo = "Esperanto",
    et = "Estonian",
    tl = "Filipino",
    fi = "Finnish",
    fr = "French",
    fy = "Frisian",
    gl = "Galician",
    ka = "Georgian",
    de = "German",
    el = "Greek",
    gu = "Gujarati",
    ht = "Haitian Creole",
    ha = "Hausa",
    haw = "Hawaiian",
    iw = "Hebrew",
    hi = "Hindi",
    hmn = "Hmong",
    hu = "Hungarian",
    is = "Icelandic",
    ig = "Igbo",
    id = "Indonesian",
    ga = "Irish",
    it = "Italian",
    ja = "Japanese",
    jw = "Javanese",
    kn = "Kannada",
    kk = "Kazakh",
    km = "Khmer",
    ko = "Korean",
    ku = "Kurdish (Kurmanji)",
    ky = "Kyrgyz",
    lo = "Lao",
    la = "Latin",
    lv = "Latvian",
    lt = "Lithuanian",
    lb = "Luxembourgish",
    mk = "Macedonian",
    mg = "Malagasy",
    ms = "Malay",
    ml = "Malayalam",
    mt = "Maltese",
    mi = "Maori",
    mr = "Marathi",
    mn = "Mongolian",
    my = "Myanmar (Burmese)",
    ne = "Nepali",
    no = "Norwegian",
    ps = "Pashto",
    fa = "Persian",
    pl = "Polish",
    pt = "Portuguese",
    pa = "Punjabi",
    ro = "Romanian",
    ru = "Russian",
    sm = "Samoan",
    gd = "Scots Gaelic",
    sr = "Serbian",
    st = "Sesotho",
    sn = "Shona",
    sd = "Sindhi",
    si = "Sinhala",
    sk = "Slovak",
    sl = "Slovenian",
    so = "Somali",
    es = "Spanish",
    su = "Sundanese",
    sw = "Swahili",
    sv = "Swedish",
    tg = "Tajik",
    ta = "Tamil",
    te = "Telugu",
    th = "Thai",
    tr = "Turkish",
    uk = "Ukrainian",
    ur = "Urdu",
    uz = "Uzbek",
    vi = "Vietnamese",
    cy = "Welsh",
    xh = "Xhosa",
    yi = "Yiddish",
    yo = "Yoruba",
    zu = "Zulu"
--]]
end)

Section:NewButton("ANTI-AFK", "no te sacara por los 20MIN de inactividad", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/KazeOnTop/Rice-Anti-Afk/main/Wind", true))()
end)


PlayerSection:NewButton("Reset", "Reiniciar", function()
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
end)

--Animal Simulator
local AnimalSim = Window:NewTab("AnimalSim")
local AnimalSimSection = AnimalSim:NewSection("Animal Simulator")

AnimalSimSection:NewButton("AutoCoin", "AutoCoin", function()
    while wait() do
 local Event = game:GetService("ReplicatedStorage").Events.CoinEvent
Event:FireServer()
end
end)

AnimalSimSection:NewButton("HitBox", "", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/2dgeneralspam1/scripts-and-stuff/master/shit%20script%20pack/CheatX'))()
end)

AnimalSimSection:NewButton("kill aura invisivel", "", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/LeftOnReadInvalid/RobloxStuff/main/Animal%20Simulator%20GUI', true))()
end)

AnimalSimSection:NewButton("AutoFarm", "Auto Entrenar", function()
     repeat wait() until game:IsLoaded()


local time = os.clock()
COREGUI = game:GetService("CoreGui")
if not game:IsLoaded() then
	game.Loaded:Wait()
end

if game.PlaceId ~= 5712833750 then
    return
end

local breakit = false
while true do
    local success, error = pcall(function()
        print(game.Players.LocalPlayer:FindFirstChild("leaderstats"))
        task.wait()
        if game.Players.LocalPlayer:FindFirstChild("leaderstats") then
            breakit = true
        end
    end)

    if error then
        print(success, error)
    end

    if breakit then
        break
    end
end

Player = game.Players.LocalPlayer
Character = Player.Character or Player.CharacterAdded:Wait()


--[username] = 'webhook'
local Webhook = { -- For Grinding, tells you your leveling speed.
    ["XelXel"] = '', -- Example Webhook, doesn't work.
}

if Webhook[game.Players.LocalPlayer.Name] then
    getgenv().LocalWebhookId = Webhook[game.Players.LocalPlayer.Name]
end

Access = true
VIP = true



---SYSTEM TO SEE WHEN A PLAYER IS DEAD OR ALIVE [[START]]
function RemoveGUI()
    local success, error = pcall(function()
        if game.Players.LocalPlayer.PlayerGui:FindFirstChild("newRewardGui") then
            game.Players.LocalPlayer.PlayerGui.newRewardGui:Destroy()
            breakit = true
        end
    end)
end

function RemoveAddedCooldown()
    Character.ChildAdded:connect(function(child)
        if child.Name == "justFound" or child.Name == "Deb" or child.Name == "FireballDeb" then
            wait()
            child:Destroy()
        else
            print(child.Name, "Added")
        end
    end)
end


teleport = false
local CharacterAlive
if Character:FindFirstChild("Humanoid").Health > 0 then
    CharacterAlive = true
    teleport = true

    RemoveAddedCooldown()
    RemoveGUI()

    Character:WaitForChild("Humanoid").Died:Connect(function()
        CharacterAlive = false
    end)
else
    CharacterAlive = false
end

game.Players.LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Character:WaitForChild("Humanoid")
    CharacterAlive = true
    teleport = true

    RemoveAddedCooldown()
    RemoveGUI()

    Character:WaitForChild("Humanoid").Died:Connect(function()
        print("Character Dead")
        CharacterAlive = false
    end)
end)

---SYSTEM TO SEE WHEN A PLAYER IS DEAD OR ALIVE [[END]]

-- [[ Comma Function ]]
function commaValue(amount)
    local formatted = amount
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if (k==0) then
            break
        end
    end
    return formatted
end





---- KEEP TRACK OF PLAYER'S PING
local fps = 0
local PlayerPing = 0
game:GetService("RunService").RenderStepped:Connect(function(ping)
    PlayerPing = (game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(math.round(2/ping))) -- your ping
    fps = math.round(1/ping)
end)




-- [[ Anti AFK ]]
if not game:IsLoaded() then game.Loaded:Wait(); end

local idledEvent = game:GetService("Players").LocalPlayer.Idled
local function disable()
    for _, cn in ipairs(getconnections(idledEvent)) do
        cn:Disable()
    end
end

oldConnect = hookfunction(idledEvent.Connect, function(self, ...)
    local cn = oldConnect(self, ...); disable()
    return cn
end)

namecall = hookmetamethod(game, "__namecall", function(self, ...)
    if self == idledEvent and getnamecallmethod() == "Connect" then
        local cn = oldConnect(self, ...); disable()
        return cn
    end
    return namecall(self, ...)
end)

disable()



-- [[ UI Library Setup ]]
Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/VoixGIT/ONIHUB/main/VisualUI3.0'))()
Window = Library:CreateWindow('O N I  H U B', 'V 4 . 0 [Open Source]', 'O N I  H U B', ' ', 'VisualUIConfigs', 'Kiriot')


wait()
print("UI RUNNING")

-- [[ UI Section Autofarm ]]
TabAutofarm = Window:CreateTab('Auto Farm', true, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
Section = TabAutofarm:CreateSection('Auto Farm')


-- [[ TIMER ]]
local timeSecondsDummy = 0
local timeMinsDummy = timeSecondsDummy / 60
local timeHoursDummy = timeMinsDummy / 60
local timeDaysDummy = timeHoursDummy / 60
task.spawn(function()
    pcall(function()
        while wait(1) do
            ----print(timeSecondsDummy)
            timeSecondsDummy += 1
            timeMinsDummy = timeSecondsDummy / 60
            timeHoursDummy = timeMinsDummy / 60
            timeDaysDummy = timeHoursDummy / 60
        end
    end)
end)

------------

local savedpos
Toggle = Section:CreateToggle('[Dummy] (Hit)', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        NewLoop = true
    else
        NewLoop = false
    end

    timeSecondsDummy = 0
    local dummytarget = nil
    local success, error = pcall(function()
        if NewLoop then
            savedpos = Character.HumanoidRootPart.CFrame
            TrackingWebhookSeconds = 0
            timeSecondsDummy = 0
            local search
            local dummyLevel
            if game.Players.LocalPlayer.leaderstats.Level.Value > 5000 then
                dummyLevel = "Dummy2"
                dummyName = "5k_dummies"
                search = game:GetService("Workspace").MAP[dummyName]
            else
                dummyLevel = "Training Dummy"
                search = game:GetService("Workspace").MAP.dummies
            end

            dummytarget = search:FindFirstChild(dummyLevel)

            Character.HumanoidRootPart.CFrame = dummytarget.HumanoidRootPart.CFrame + Vector3.new(3,0,0)
        else
            Character.HumanoidRootPart.CFrame = savedpos
        end

        local FireLoop = 0
        local Fire = 0
        while NewLoop do
            task.wait()
            Fire += 1
            if Fire >= 2 then
                Fire = 0
                FireLoop += 1
                if FireLoop > 60 then
                    FireLoop = 1
                end
                game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(dummytarget.Humanoid, FireLoop)
            end

            task.spawn(function()
                if timeMinsDummy > 5 then
                    timeSecondsDummy = 0
                    if Character:FindFirstChild("Humanoid") then
                        Character.Humanoid.Health = 0
                    end
                    repeat
                        wait()
                    until CharacterAlive == true

                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dummytarget.HumanoidRootPart.CFrame
                end
            end)
        end
    end)
end)


local savedpos
Toggle = Section:CreateToggle('[Dummy] (Single Fireball + )', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        NewLoop = true
    else
        NewLoop = false
    end

    timeSecondsDummy = 0
    local dummytarget = nil
    local success, error = pcall(function()
        if NewLoop then
            savedpos = Character.HumanoidRootPart.CFrame
            TrackingWebhookSeconds = 0
            timeSecondsDummy = 0
            local search
            local dummyLevel
            if game.Players.LocalPlayer.leaderstats.Level.Value > 5000 then
                dummyLevel = "Dummy2"
                dummyName = "5k_dummies"
                search = game:GetService("Workspace").MAP[dummyName]
            else
                dummyLevel = "Training Dummy"
                search = game:GetService("Workspace").MAP.dummies
            end

            dummytarget = search:FindFirstChild(dummyLevel)

            Character.HumanoidRootPart.CFrame = dummytarget.HumanoidRootPart.CFrame + Vector3.new(3,0,0)
        else
            Character.HumanoidRootPart.CFrame = savedpos
        end


        task.spawn(function()

            local Delay = 0
            local runningFireball = false
            local waittime = 0.1
            while NewLoop do
                task.wait()


                game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(dummytarget.Humanoid, 1)



                task.spawn(function()
                    pcall(function()
                        if game.Players.LocalPlayer.Backpack:FindFirstChild("Fireball") then
                            game.Players.LocalPlayer.Backpack:FindFirstChild("Fireball").FireballEvent:FireServer(dummytarget.HumanoidRootPart.Position)
                        end

                        if game.Players.LocalPlayer.Character:FindFirstChild("Fireball") then
                            game.Players.LocalPlayer.Character:FindFirstChild("Fireball").FireballEvent:FireServer(dummytarget.HumanoidRootPart.Position)
                        end
                        fireballsTotal = 1
                    end)
                end)



                task.spawn(function()
                    if timeMinsDummy > 5 then
                        timeSecondsDummy = 0
                        if Character:FindFirstChild("Humanoid") then
                            Character.Humanoid.Health = 0
                        end
                        repeat
                            wait()
                        until CharacterAlive == true

                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dummytarget.HumanoidRootPart.CFrame
                    end
                end)
            end
        end)
    end)
end)


local savedpos
Toggle = Section:CreateToggle('[Dummy] (All Fireballs + Hit - [MultiToggle])', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        NewLoop = true
    else
        NewLoop = false
    end

    timeSecondsDummy = 0
    local dummytarget = nil
    local success, error = pcall(function()
        if NewLoop then
            savedpos = Character.HumanoidRootPart.CFrame
            TrackingWebhookSeconds = 0
            timeSecondsDummy = 0
            local search
            local dummyLevel
            if game.Players.LocalPlayer.leaderstats.Level.Value > 5000 then
                dummyLevel = "Dummy2"
                dummyName = "5k_dummies"
                search = game:GetService("Workspace").MAP[dummyName]
            else
                dummyLevel = "Training Dummy"
                search = game:GetService("Workspace").MAP.dummies
            end

            dummytarget = search:FindFirstChild(dummyLevel)

            Character.HumanoidRootPart.CFrame = dummytarget.HumanoidRootPart.CFrame + Vector3.new(3,0,0)
        else
            Character.HumanoidRootPart.CFrame = savedpos
        end


        task.spawn(function()

            local runningFireball = false
            while NewLoop do
                task.wait()

                game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(dummytarget.Humanoid, 1)


                local Fireballs = 0
                if runningFireball == false then
                    runningFireball = true
                    task.spawn(function()
                        a, b = pcall(function()

                            local Balls = {"Fireball", "Lightningball"}
                            local Locations = {"Backpack", "Character"}
                            for i, player in pairs(game.Players:GetChildren()) do
                                local earlyreturn = false
                                for _,Ball in pairs(Balls) do
                                    for i,Location in pairs(Locations) do
                                        local CheckBall = player[Location]:FindFirstChild(Ball)
                                        if CheckBall then
                                            Fireballs += 1
                                            CheckBall:FindFirstChild("FireballEvent"):FireServer(dummytarget.HumanoidRootPart.Position)
                                            earlyreturn = true
                                            wait()
                                            break
                                        end
                                    end

                                    if earlyreturn then
                                        break
                                    end
                                end
                            end

                            fireballsTotal = Fireballs
                            Fireballs = 0
                            runningFireball = false
                        end)
                        if b then
                            runningFireball = false
                        end
                    end)
                end


                task.spawn(function()
                    if timeMinsDummy > 5 then
                        timeSecondsDummy = 0
                        if Character:FindFirstChild("Humanoid") then
                            Character.Humanoid.Health = 0
                        end
                        repeat
                            wait()
                        until CharacterAlive == true

                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dummytarget.HumanoidRootPart.CFrame
                    end
                end)
            end
        end)
    end)

    if error then
        print(error)
    end
end)



local savedpos
Toggle = Section:CreateToggle('(Coins [Gain - [MultiToggle]])', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Coins = true
    else
        Coins = false
    end

    while Coins do
        wait(.1)
        game:GetService("ReplicatedStorage").Events.CoinEvent:FireServer()

        if CharacterAlive and game.Players.LocalPlayer:FindFirstChild("otherstats").Coin.Value >= 500 then
            game:GetService("ReplicatedStorage").Events.unlockEvent:FireServer()
        end
    end
end)

-- [[ XEN SETTINGS ]]


TabAutoRest = Window:CreateTab('Name Features', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
Section = TabAutoRest:CreateSection('Name Features')

local Animation
Toggle = Section:CreateToggle('ONI Text [Animation]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Animation = true
    else
        Animation = false
    end

    Animate = {}
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Xen101/Roblox/main/Animal%20Simulator/Animations/Animation%20Oni%20Logo.lua",true))()

    while Animation do
        wait()
            --Forward
        for i=1, #Animate, 1 do
            print(Animate)
            game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(Animate[i].Text)
            wait(0.5)
        end

        --Reverse
        for i= #Animate, 1, -1 do
            game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(Animate[i].Text)
            wait(0.5)
        end
    end
end)

local Animation
Toggle = Section:CreateToggle('TeaSip [Animation]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Animation = true
    else
        Animation = false
    end
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Xen101/Roblox/main/Animal%20Simulator/Animations/Animation%20Tea%20Sip.lua",true))()

    while Animation do
        wait()
        for i,v in pairs(Animate) do
            game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(v.Text)
            wait(0.3)
        end
        wait(0.5)
    end
end)

local Animation
Toggle = Section:CreateToggle('Girl Kiss [Animation]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Animation = true
    else
        Animation = false
    end
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Xen101/Roblox/main/Animal%20Simulator/Animations/Animation%20Kiss%20GIrl%202.lua",true))()

    while Animation do
        wait()
        for i,v in pairs(Animate) do
            game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(v.Text)
            wait(0.3)
        end
        wait(0.5)
    end
end)

local Animation
Toggle = Section:CreateToggle('Nezuko Run [Animation]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Animation = true
    else
        Animation = false
    end
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Xen101/Roblox/main/Animal%20Simulator/Animations/Animation%20Nezuko.lua",true))()

    while Animation do
        wait()
        for i,v in pairs(Animate) do
            game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(v.Text)
            wait(0.3)
        end
    end
end)


local Username = ""
local Textbox = Section:CreateTextbox('ONI Name Change', '', function(Value)
    Username = Value

    --string = ""
    --for i = 1, Username/2 do

   -- end


    endstring = "👹 \r\n ".. Username

    game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(endstring)
end)

Button = Section:CreateButton('Reset Name', function()
    game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(game.Players.LocalPlayer.DisplayName)
end)

Button = Section:CreateButton("Bug Everyone's HUD", function()
    local string
    local fullstring = ""
    for i = 1, 100 do
        fullstring = fullstring .. string
    end
    game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(fullstring)
end)

Button = Section:CreateButton('Cover the Leaderboard with ONI', function()
    local string = "\r\n 👹ONI👹"
    local fullstring = ""
    for i = 1, 75 do
        fullstring = fullstring .. string
    end
    game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(fullstring)
    
end)




TabAutoRest = Window:CreateTab('Misc Features', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
Section = TabAutoRest:CreateSection('Misc Features')


local Fireworks
Toggle = Section:CreateToggle('Firework Spam', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Fireworks = true
    else
        Fireworks = false
    end

    local windowFrame = game.Players.LocalPlayer.PlayerGui.ToolsGUI.windowFrame
    local toolsFrame = windowFrame.bodyFrame.body2Frame.toolsFrame
    local firework = toolsFrame.fireworks
    local fireworkFrame = firework.Frame



    if Fireworks then
        windowFrame.Visible = true
        for i,v in pairs(toolsFrame:GetChildren()) do
            if not v:IsA("Frame") then
                continue
            end
            if v.Name ~= "fireworks" then
                v.Visible = false
            end
        end
        
    else
        windowFrame.Visible = false
        for i,v in pairs(toolsFrame:GetChildren()) do
            if not v:IsA("Frame") then
                continue
            end

            if v.Name ~= "fireworks" then
                v.Visible = true
            end
        end
    end
    if Fireworks then
        while Fireworks do
            wait()

            pcall(function()
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(fireworkFrame.AbsolutePosition.X+fireworkFrame.AbsoluteSize.X/2,fireworkFrame.AbsolutePosition.Y+50,0,true,fireworkFrame,1)
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(fireworkFrame.AbsolutePosition.X+fireworkFrame.AbsoluteSize.X/2,fireworkFrame.AbsolutePosition.Y+50,0,false,fireworkFrame,1)
                task.wait()
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(Player.Backpack:WaitForChild("Fireworks"))
                wait()
                game.Players.LocalPlayer.Character.Fireworks:Activate()
                task.wait()
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(fireworkFrame.AbsolutePosition.X+fireworkFrame.AbsoluteSize.X/2,fireworkFrame.AbsolutePosition.Y+50,0,true,fireworkFrame,1)
                game:GetService("VirtualInputManager"):SendMouseButtonEvent(fireworkFrame.AbsolutePosition.X+fireworkFrame.AbsoluteSize.X/2,fireworkFrame.AbsolutePosition.Y+50,0,false,fireworkFrame,1)
            end)

        end
    end
end)


local MEgg = 0
local WorkspaceSound
local EGGWorkspaceSound
Toggle = Section:CreateToggle('Mute All Annoying Audio', true, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Mute = true
    else
        Mute = false
    end

    --Yes this could be rewritten to be more effective, am just too lazy to do so.

    if not Mute then
        for i, connection in pairs(getconnections(workspace.DescendantAdded)) do
            connection:Disable()
        end
    end

    if Mute then
        MEgg += 1
        warn(MEgg)
    end

    pcall(function()
        if game.ReplicatedStorage:FindFirstChild("Soundtracks") then
            game.ReplicatedStorage:FindFirstChild("Soundtracks"):Destroy()
        end
    end)

    if Mute and MEgg == 5 then
        game.Workspace.DescendantAdded:connect(function(child)
            if child:IsA("Sound") then
                child.Pitch = 0.2
            end
        end)
    end

    if Mute and MEgg ~= 5 then
        game.Workspace.DescendantAdded:connect(function(child)
            if child:IsA("Sound") then
                child.Playing = false
                child.Volume = 0
            end
        end)
    end



    while Mute do
        local success, error = pcall(function()
            for i,v in pairs(game.Players:GetPlayers()) do
                ----print(i,v)
                if v.Name ~= game.Players.LocalPlayer.Name and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character.HumanoidRootPart:FindFirstChild("Sound") then
                ----print(i,v)
                    v.Character.HumanoidRootPart:FindFirstChild("Sound").Volume = 0
                end
            end

            game:GetService("SoundService"):FindFirstChild("BGMusic").Volume = 0
            game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("coinSpawner").Sound.Volume = 0
        end)

        if not success then
            --warn(error)
        end

        wait(1)
    end

    local success, error = pcall(function()
        for i,v in pairs(game.Players:GetPlayers()) do
            if v.Name ~= game.Players.LocalPlayer.Name and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character.HumanoidRootPart:FindFirstChild("Sound") then
                v.Character.HumanoidRootPart:FindFirstChild("Sound").Volume = 1.3
            end
        end
        game:GetService("SoundService"):FindFirstChild("BGMusic").Volume = 1
        game.GetService("Players").LocalPlayer:FindFirstChild("coinSpawner").Sound.Volume = 0.1
    end)
end)


local Label = Section:CreateLabel('Radio Settings:')
local RadioID = 0
local Textbox = Section:CreateTextbox('Radio ID', '', function(Value)
    RadioID = Value

    game:GetService("Players").LocalPlayer.PlayerGui.RolePlayName.Frame.bodyFrame.submitBtn.nameEvent:FireServer(endstring)
end)

Button = Section:CreateButton('Play Audio', function()
    if RadioID == 0 then
        return
    end
    
    game:GetService("Workspace"):FindFirstChild("DRadio_Script").Event:FireServer(RadioID)
end)

Button = Section:CreateButton('Stop Audio', function()
    game:GetService("Workspace"):FindFirstChild("DRadio_Script").Event:FireServer(0)
end)



--[[
Toggle = Section:CreateToggle('Grab Lightning (Need Fireball) on Spawn', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Light = true
    else
        Light = false
    end
    pcall(function()
        --print(Lightn)
        if Light then
            for i,v in pairs(game.Workspace.MAP.waterfall1.cave:GetChildren()) do
                if v.Name == "Model" then
                    for i,v in pairs(v:GetChildren()) do
                        if v.Name == "rock" then
                            v.CanCollide = false
                        end
                    end
                end
            end

            getgenv().Lightning = game.Players.LocalPlayer.CharacterAdded:Connect(function(newCharacter)
                wait(2)
                local savedpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                local Camera = game.Workspace.CurrentCamera
                Camera.CameraType = Enum.CameraType.Scriptable
                Camera.CFrame = game.Workspace.PickFolder.rock.CFrame * CFrame.new(0,2,10)
                Camera.CFrame = CFrame.lookAt(Camera.CFrame.p, game.Workspace.PickFolder.rock.Position)

                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-60,0)
                wait(.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.PickFolder.rock.CFrame * CFrame.new(0,-60,0)
                wait(.1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.PickFolder.rock.CFrame * CFrame.new(0,0-11.5,0)
                task.wait()
                repeat
                wait(.3)
                game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
                until game.Players.LocalPlayer.Character:FindFirstChild("Lightningball") or game.Players.LocalPlayer.Backpack:FindFirstChild("Lightningball") or a

                wait()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-60,0)
                wait(.1)
                game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedpos
            end)
        else
            getgenv().Lightning:Disconnect()
        end
    end)
end)]]

local Label = Section:CreateLabel(' Settings:')
Toggle = Section:CreateToggle('Character Reset - Avatar Editor', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        CharacterReset = true
    else
        CharacterReset = false
    end

    if not CharacterReset then
        return
    end

    game:GetService("ReplicatedStorage").AvatarEditor.RemoteEvent:FireServer("reset")


    game.Players.LocalPlayer.CharacterAdded:Connect(function(newCharacter)
        wait(1)
        game:GetService("ReplicatedStorage").AvatarEditor.RemoteEvent:FireServer("reset")
        wait(1)
        game:GetService("ReplicatedStorage").AvatarEditor.RemoteEvent:FireServer("reset")
    end)
end)


local Connection
function InviteConnection(GUI)
    Connection = GUI:GetPropertyChangedSignal("Enabled"):Connect(function(state)
        --print("changed", state)
        GUI.Enabled = false
    end)
end

function GetInviteConnection()
    return Connection
end

local Toggle = Section:CreateToggle('Ride Invite GUI Toggle', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        InviteDisabled = true
    else
        InviteDisabled = false
    end

    local GUI = game:GetService("Players").LocalPlayer.PlayerGui.Ride.RideInviteGUI

    if InviteDisabled then
        InviteConnection(GUI)
    end

    if not InviteDisabled then
        GetInviteConnection():Disconnect()
        GUI.Enabled = false
    end
end)




local Toggle = Section:CreateToggle('Anti-Fling', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        InviteDisabled = true
    else
        InviteDisabled = false
    end

    local GUI = game:GetService("Players").LocalPlayer.PlayerGui.Ride.RideInviteGUI

    if InviteDisabled then
        getgenv().AntiFlingConfig = {
            disable_rotation = true;

            limit_velocity = true;
            limit_velocity_sensitivity = 150; 
            limit_velocity_slow = 0;

            anti_ragdoll = true;

            anchor = false;
            smart_anchor = true; 
            anchor_dist = 30;

            teleport = false;
            smart_teleport = true;
            teleport_dist = 30;
        }
        loadstring(game:HttpGet('https://raw.githubusercontent.com/topitbopit/rblx/main/extra/better_antifling.lua'))()
    end

    if not InviteDisabled then
        getgenv().disable()
    end
end)




--[[
Toggle = Section:CreateToggle('Auto Eat', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Tog = true
    else
        Tog = false
    end

    while Tog do
        local success, error = pcall(function()
            if Character.Humanoid.Health >= Character.Humanoid.MaxHealth then
                repeat
                    ----print("Waiting")
                    wait(.1)
                until Character.Humanoid.Health < Character.Humanoid.MaxHealth

                --print("Lower Working Magic")
            end
        end)
        if not success then
            --warn(error)
        end

        if Character:FindFirstChild("Food") ~= false and game.Players.LocalPlayer.Backpack:FindFirstChild("Food") then
            Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Food"))
        end

        wait()

        if Character:FindFirstChild("Food") then
            Character:FindFirstChild("Food"):Activate()
            wait()
            Character:FindFirstChild("Humanoid"):UnequipTools()
        end
    end
end)
--]]
--[[
local Label = Section:CreateLabel('Force Ride:')

local RidePlayer = ""
local Textbox = Section:CreateTextbox('Player:', '', function(Value)
    RidePlayer = Value
end)

local Toggle = Section:CreateToggle('Ride Spam', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Ride = true
    else
        Ride = false
    end

    if Ride then
        task.wait()
        game:GetService("ReplicatedStorage").RideEvents.acceptEvent:FireServer(RidePlayer)
    end
end)]]




-- [[ PVP SETTINGS ]]

if VIP then
    TabAutoRest = Window:CreateTab('PVP Features', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
    Section = TabAutoRest:CreateSection('PVP Features')


    local Label = Section:CreateLabel('HitBox Increaser:')

    local Head = 5
    local Textbox = Section:CreateTextbox('Head Size', '5.8', function(Value)
        Head = Value
    end)

    local Toggle = Section:CreateToggle('Hitbox [Pack Whitelist]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
        if Value == true then
            Hitbox = true
        else
            Hitbox = false
        end

        while Hitbox do
            a, b  = pcall(function()
                local friendlies = {}

                local Team
                local Teams = game.Workspace.Teams
                for i,v in pairs(Teams:GetDescendants()) do
                    if v:IsA("StringValue") then
                        if v.Value == game.Players.LocalPlayer.Name then
                            Team = tostring(v.Parent.Name)
                        end
                    end
                end

                if Team ~= nil then
                    print(Teams[Team])
                    for i,v in pairs(Teams:FindFirstChild(Team):GetChildren()) do
                        if v:IsA("StringValue") then
                            --print(v.Value)
                            table.insert(friendlies, v.Value)
                        end
                    end
                end

                for i,v in pairs(game:GetService('Players'):GetPlayers()) do
                    print("OUT ",v.Name)
                    if v.Name ~= game:GetService('Players').LocalPlayer.Name and Value then
                        print("IN ",v.Name)

                        if table.find(friendlies, v.Name) then
                            v.Character.HumanoidRootPart.Size = Vector3.new(0.1,0.1,0.1)
                            v.Character.HumanoidRootPart.Transparency = 0.5
                            v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Black")
                            v.Character.HumanoidRootPart.Material = "Plastic"
                            v.Character.HumanoidRootPart.CanCollide = true
                            continue
                        end

                        v.Character.HumanoidRootPart.Size = Vector3.new(Head,Head,Head)
                        v.Character.HumanoidRootPart.Transparency = 0.5
                        v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Black")
                        v.Character.HumanoidRootPart.Material = "Plastic"
                        v.Character.HumanoidRootPart.CanCollide = true
                    end
                end
            end)

            if b then
                print(a, b)
            end
            wait(10)
        end

        if not Hitbox then
            for i,v in pairs(game:GetService('Players'):GetChildren()) do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    --pcall(function()
                    v.Character.HumanoidRootPart.Size = Vector3.new(0.7,1.6,0.92)
                    v.Character.HumanoidRootPart.Transparency = 1
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Black")
                    v.Character.HumanoidRootPart.Material = "Plastic"
                    v.Character.HumanoidRootPart.CanCollide = true
                --end)
                end
            end
        end
    end)


    local Label = Section:CreateLabel('Uses Fireballs to attack players/target.')

    local Fireballs = {
        "Fireball",
        "LightningBall",
    }

    local Parts = {
        game.Workspace:FindFirstChild("SafeZonePart"),
        game.Workspace:FindFirstChild("SafeZonePart2")
    }


    local Whitelist = {}
    local Toggle = Section:CreateToggle("Fireball Aura [Unlimited Range]", false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
        if Value == true then
            Aura = true
        else
            Aura = false
        end

        if Aura then
        pcall(function()
            task.spawn(function()
                waittime = 0.1
                runningFireball = false
                while Aura do
                    wait(2)
                    print("AURA: ",Aura)
                    local Fireballs = 0
                        task.spawn(function()
                            pcall(function()
                                local Balls = {"Fireball", "Lightningball"}
                                local Locations = {"Backpack", "Character"}
                                for i, player in pairs(game.Players:GetChildren()) do
                                    local earlyreturn = false
                                    for _,Ball in pairs(Balls) do
                                        for i,Location in pairs(Locations) do
                                            local CheckBall = player[Location]:FindFirstChild(Ball)
                                            if CheckBall then
                                                print("FIREBALL")
                                                Fireballs += 1
                                                CheckBall:FindFirstChild("FireballEvent"):FireServer(Vector3.new(0, -10000, 0))
                                                earlyreturn = true
                                                wait(waittime)
                                                break
                                            end
                                        end

                                        if earlyreturn then
                                            break
                                        end
                                    end
                                end

                                if Fireballs ~= 0 then
                                    waittime =  2.2 / Fireballs
                                    print(waittime)
                                end
                                fireballsTotal = Fireballs
                                Fireballs = 0
                                runningFireball = false
                            end)
                        end)
                    end
          

            end)
        end)

            getgenv().FireballKill = game.Workspace.ChildAdded:connect(function(child)

                a, b = pcall(function()

                    --print(child)
                    if not table.find(Fireballs, child.Name) then
                        return
                    end


                    local PlayerList = {}
                    local Min = math.huge


                    local friendlies = {}

                    local Team
                    local Teams = game.Workspace.Teams
                    for i,v in pairs(Teams:GetDescendants()) do
                        if v:IsA("StringValue") then
                            if v.Value == game.Players.LocalPlayer.Name then
                                Team = tostring(v.Parent.Name)
                            end
                        end
                    end

                    if Team ~= nil then
                        print(Teams[Team])
                        for i,v in pairs(Teams:FindFirstChild(Team):GetChildren()) do
                            if v:IsA("StringValue") then
                                table.insert(friendlies, v.Value)
                            end
                        end
                    end


                    for i,SearchPlayer in pairs(game.Players:GetChildren()) do
                        if SearchPlayer.Name == game.Players.LocalPlayer.Name then
                            continue
                        end

                        if not SearchPlayer and SearchPlayer.Character and SearchPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            continue
                        end

                        
                        mag = (SearchPlayer.Character.HumanoidRootPart.Position - game.Workspace:FindFirstChild("SafeZonePart2").Position).Magnitude
                        print(mag)
                        if mag < 175 then
                           -- print("Nope", SearchPlayer.Name,  "is in Safezone")
                            continue
                        end 
                    
                        if table.find(friendlies, SearchPlayer.Name) then
                           -- print("Nope", SearchPlayer.Name,  "is friendly")
                            continue
                        end

                        if SearchPlayer.Character and SearchPlayer.Character:FindFirstChild("Humanoid").Health > 0 then
                            local Mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - SearchPlayer.Character.HumanoidRootPart.Position).Magnitude
                            table.insert(PlayerList, {Player = SearchPlayer, Magnitude = Mag})
                            if Min > Mag then
                                Min = Mag
                            end
                        end
                    end

                    table.sort(PlayerList, function(a, b)
                        return a.Magnitude < b.Magnitude
                    end)

                    if PlayerList[1] and PlayerList[1].Magnitude < 1000000 then
                        a, b = pcall(function()
                            while true do
                                wait()
                                if child:FindFirstChild("TouchInterest") then
                                    local Camera = game.Workspace.CurrentCamera
                                    Camera.CameraType = Enum.CameraType.Scriptable
                                    Camera.CFrame = PlayerList[1].Player.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,10)
                                    Camera.CFrame = CFrame.lookAt(Camera.CFrame.p, PlayerList[1].Player.Character.HumanoidRootPart.Position)
                                    wait(.1)
                                    print("Killing", PlayerList[1].Player.Name, child:FindFirstChild("TouchInterest"))
                                    firetouchinterest(PlayerList[1].Player.Character.HumanoidRootPart, child, 0)
                                    task.wait()
                                    firetouchinterest( PlayerList[1].Player.Character.HumanoidRootPart, child, 1)
                                    print(PlayerList[1].Player.Character.Humanoid.Health .. "/" .. PlayerList[1].Player.Character.Humanoid.MaxHealth)

                                    break
                                end
                            end
                        end)

                        print(a,b)
                    else
                        game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
                    end
                end)

                print(a,b)
            end)


        else
            game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
            getgenv().FireballKill:Disconnect()
        end
    end)


    local PlayerFireKill = ""
    local Textbox = Section:CreateTextbox('Player', '', function(Value)
        PlayerFireKill = Value
    end)

    local Whitelist = {}
    local Toggle = Section:CreateToggle('Fireball Aura [SINGLE]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
        if Value == true then
            FireAura = true
        else
            FireAura = false
        end

        if FireAura then
            print("FIREAURA")
            targetPlayer = game.Players[PlayerFireKill]


            task.spawn(function()
                runningFireball = false
                while FireAura do
                    wait(1)
                    print(FireAura)
                    if runningFireball == false and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character:FindFirstChild("Humanoid").Health > 0 then
                        runningFireball = true
                        task.spawn(function()
                            pcall(function()
                                local Balls = {"Fireball", "Lightningball"}
                                local Locations = {"Backpack", "Character"}
                                for i, player in pairs(game.Players:GetChildren()) do
                                    local earlyreturn = false
                                    for _,Ball in pairs(Balls) do
                                        for i,Location in pairs(Locations) do
                                            local CheckBall = player[Location]:FindFirstChild(Ball)
                                            if CheckBall then
                                                print("FIREBALL")
                                                CheckBall:FindFirstChild("FireballEvent"):FireServer(Vector3.new(0, -10000, 0))
                                                earlyreturn = true
                                                wait()
                                                break
                                            end
                                        end

                                        if earlyreturn then
                                            break
                                        end
                                    end
                                end
                                runningFireball = false
                            end)
                        end)
                    end
                end
            end)

            getgenv().FireballSingleKill = game.Workspace.ChildAdded:connect(function(child)

                pcall(function()
                    --print(child)
                    if not table.find(Fireballs, child.Name) then
                        return
                    end


                    while FireAura do
                        task.wait()
                        if child:FindFirstChild("TouchInterest") then

                            wait(.1)
                            print("Killing", targetPlayer.Name, child:FindFirstChild("TouchInterest"))
                            firetouchinterest(targetPlayer.Character.HumanoidRootPart, child, 0)
                            task.wait()
                            firetouchinterest( targetPlayer.Character.HumanoidRootPart, child, 1)
                            print(targetPlayer.Character.Humanoid.Health .. "/" .. targetPlayer.Character.Humanoid.MaxHealth)

                            break
                        end
                    end
                end)
            end)


        else
            getgenv().FireballSingleKill:Disconnect()
        end



    end)


    local Label = Section:CreateLabel('Uses your Q Hit to kill those around you')



    local Whitelist = {}
    local Toggle = Section:CreateToggle('Kill Aura Invisible [ALL]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
        if Value == true then
            KillAura = true
        else
            KillAura = false
        end

        while KillAura do

            a, b = pcall(function()
                local friendlies = {}

                local Team
                local Teams = game.Workspace.Teams
                for i,v in pairs(Teams:GetDescendants()) do
                    if v:IsA("StringValue") then
                        if v.Value == game.Players.LocalPlayer.Name then
                            Team = tostring(v.Parent.Name)
                        end
                    end
                end

                if Team ~= nil then
                    print(Teams[Team])
                    for i,v in pairs(Teams:FindFirstChild(Team):GetChildren()) do
                        if v:IsA("StringValue") then
                            table.insert(friendlies, v.Value)
                        end
                    end
                end



                local PlayerList = {}
                local Min = math.huge
                for i,SearchPlayer in pairs(game.Players:GetChildren()) do
                    if SearchPlayer.Name == game.Players.LocalPlayer.Name then
                        continue
                    end

                    --if table.find(PlayersInSafeZone, SearchPlayer.Name) then
                        --print("Nope", SearchPlayer.Name,  "is in Safezone")
                    --    continue
                    --end

                    if table.find(friendlies, SearchPlayer.Name) then
                        --print("Nope", SearchPlayer.Name,  "Friendly")
                        continue
                    end

                    if SearchPlayer.Character and SearchPlayer.Character:FindFirstChild("Humanoid") and SearchPlayer.Character:FindFirstChild("Humanoid").Health > 0 then
                        local Mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - SearchPlayer.Character.HumanoidRootPart.Position).Magnitude
                        table.insert(PlayerList, {Player = SearchPlayer, Magnitude = Mag})
                        if Min > Mag then
                            Min = Mag
                        end
                    end
                end

                table.sort(PlayerList, function(a, b)
                    return a.Magnitude < b.Magnitude
                end)

                if PlayerList[1].Magnitude < 20 and PlayerList[1].Player and PlayerList[1].Player.Character.Humanoid.Health > 0 then
                    game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(PlayerList[1].Player.Character.Humanoid, "1")
                    print(PlayerList[1].Player.Character.Humanoid.Health .. "/" .. PlayerList[1].Player.Character.Humanoid.MaxHealth)
                end
            end)
            wait(.2)

            if b then
                print(a , b)
            end
        end
    end)


    local PlayerKill = ""
    local Textbox = Section:CreateTextbox('Player', '', function(Value)
        PlayerKill = Value
    end)

    local Toggle = Section:CreateToggle('Kill Aura Invisible [SINGLE]', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
        if Value == true then
            SingleKillAura = true
        else
            SingleKillAura = false
        end

        while SingleKillAura do

            a, b = pcall(function()
                local PlayerList = {}
                local Min = math.huge
                local LocalPlay = game.Players.LocalPlayer.Character.PrimaryPart.Position
                local Target = game.Players[PlayerKill].Character
                if (LocalPlay - Target.PrimaryPart.Position).Magnitude < 20 and Target.Humanoid.Health > 0 then
                    game:GetService("ReplicatedStorage").jdskhfsIIIllliiIIIdchgdIiIIIlIlIli:FireServer(Target.Humanoid, "1")
                    print(Target.Humanoid.Health .. "/" .. Target.Humanoid.MaxHealth)
                end
            end)

            if b then
                print(a , b)
            end
            wait(.2)
        end
    end)
end



-- [[ UI Section FPS ]] --
TabFPS = Window:CreateTab('FPS Settings', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
Section = TabFPS:CreateSection('FPS Settings')

Button = Section:CreateButton('FPS + Ping Counter', function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/littlegui/main/FPS-Counter'))()
end)

Toggle = Section:CreateToggle('Render Toggle', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Render = true
    else
        Render = false
    end

    if Render then
        game:GetService("RunService"):Set3dRenderingEnabled(false)
    else
        game:GetService("RunService"):Set3dRenderingEnabled(true)
    end
end)


local function getDir(v)
	return (
		((v.Y == 0) and Vector3.new()) or
		((v.Y > 0) and -v) or
		v
	)
end

local function computeLowestPoint(part)
	local cf = part.CFrame
	local dist = part.Size/2
	local xVec = getDir(cf.RightVector) * dist.X
	local yVec = getDir(cf.UpVector) * dist.Y
	local zVec = getDir(cf.LookVector) * dist.Z
	return (cf + xVec + yVec + zVec).p
end

local folder = Instance.new("Folder")
folder.Name = "Platforms"
folder.Parent = workspace


function createBaseplate(Part, Size, Offset)
    local baseplate = Instance.new("Part")
    baseplate.Name = "Platform"
    baseplate.Anchored = true
    baseplate.Size = Vector3.new(Size, 0.5, Size)
    baseplate.TopSurface = "Smooth"
    baseplate.BottomSurface = "Smooth"
    baseplate.Material = "Glass"
    baseplate.Transparency = 0.75

    baseplate.CFrame = CFrame.new(computeLowestPoint(Part)) * Offset

    baseplate.Parent = folder
end

Button = Section:CreateButton('Delete Map v2', function()

    local success, error = pcall(function()
        local keepListDirect = {
            game:GetService("Workspace").Camera,
            game:GetService("Players").LocalPlayer.Character,
            game:GetService("Workspace").LBFolder,
            game:GetService("Workspace").SpawnPoints
        }


        local keepListName = {
            "Terrain",
            "Platform"
        }

        local listSearch = {
            "Dummy2",
            "Training Dummy",
            "spawnPoint",
        }


        local SpawnList = game:GetService("Workspace"):FindFirstChild("SpawnPoints")
        local SpawnLocation = game:GetService("Workspace"):FindFirstChild("SpawnLocation")
        local Dummy0kList = game:GetService("Workspace"):FindFirstChild("MAP"):FindFirstChild("dummies")
        local Dummy5kList = game:GetService("Workspace"):FindFirstChild("MAP"):FindFirstChild("5k_dummies")

        local addTable = {SpawnList, Dummy0kList, Dummy5kList}


        for _,Players in pairs(game.Players:GetPlayers()) do
            table.insert(keepListDirect, Players.Character)
        end



        local Part
        for _,List in pairs(addTable) do
            for i,v in pairs(List:GetChildren()) do
                if not table.find(listSearch, v.Name) then
                    continue
                end


                if v:FindFirstChild("HumanoidRootPart") then
                    table.insert(keepListDirect, v)
                    Part = v:FindFirstChild("HumanoidRootPart")
                elseif v:IsA("Part") then
                    table.insert(keepListDirect, v)
                    Part = v
                else
                    --print("Something went wrong -- [Map Delete]")
                    continue
                end

                print(List.Name, Part)
                if List.Name == "SpawnPoints" then
                    print("HERE", List, Part)
                    createBaseplate(Part, 20, CFrame.new(0,-5.655,0))
                    -- NORMAL == (-89)
                    -- -10 == (-84)
                else
                    --print(List)
                    createBaseplate(Part, 20, CFrame.new(0,0,0))
                end

            end
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = SpawnList:FindFirstChild("spawnPoint").CFrame * CFrame.new(0,3,0)
        end

        for i,v in pairs(keepListDirect) do
            --print(v)
            if not table.find(keepListName, v.Name) then
                table.insert(keepListName, v.Name)
            end
        end




        for _, object in pairs(game.Workspace:GetDescendants()) do

            if object:IsA("Folder") then
                continue
            end

            if table.find(keepListName, object.Name) then
                continue
            end

            local skip = false
            for i,v in pairs(keepListDirect) do
                if object:IsDescendantOf(v) then
                    --[[if v.Name == "Dummy2" or v.Name == "Training Dummy" then
                        if object.Name == "HumanoidRootPart" or object.Name == "Humanoid" then
                            ----print("IN: ",object.Name)
                            skip = true
                            continue
                        else
                            object:Destroy()
                        end
                   end

                    if v.Name == game:GetService("Players").LocalPlayer.Name then
                        if object:IsA("Accessory") then
                            object:Destroy()
                        end
                        pcall(function()
                            object.Transparency = 1
                        end)
                    end]]

                   skip = true
                end
            end

            if skip == true then
                continue
            end
            object:Destroy()
        end
    end)

    if not success then
        --print(success, error)
    end
end)

-- [[ UI Section Misc ]]
TabMisc = Window:CreateTab('Pack Settings', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
Section = TabMisc:CreateSection('Pack Settings')

Button = Section:CreateButton('Create UK Pack', function()
    game:GetService("Players").LocalPlayer.PlayerGui.TeamGUI.createFrame.bodyFrame.createButton.createTeamEvent:FireServer('🇬🇧')
end)

Button = Section:CreateButton('Create ONI Pack', function()
    game:GetService("Players").LocalPlayer.PlayerGui.TeamGUI.createFrame.bodyFrame.createButton.createTeamEvent:FireServer('-👹ONI👹-')
end)

local Invitedelay = 0.3
Toggle = Section:CreateToggle('Spam Invite', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value == true then
        Spam = true
    else
        Spam = false
    end


    local Player = game.Players.LocalPlayer
    local TeamGUI = Player.PlayerGui.TeamGUI
    local playersFrame = TeamGUI.playersFrame
    local clanFrame = TeamGUI.clanFrame
    local playerInfo = playersFrame.bodyFrame


    if Spam == false then
        warn("Spam Off")
        Value = false

        playerInfo.Position = UDim2.new(0, 0, 0, 0)
        TeamGUI.Enabled = false
        clanFrame.Visible = true
        playersFrame.Visible = false
        playerInfo.Visible = false
    end

    leader = false
    for i,v in pairs(game.Workspace.Teams:GetChildren()) do
        if v.leader.Value == Player.Name then
            leader = true
        end
    end

    if leader and Spam then
        warn("Enabled GUI")

        TeamGUI.Enabled = true
        clanFrame.Visible = false
        playersFrame.Visible = true
        playerInfo.Visible = true
    else
        print("Spam is off or you are not leader")
        Value = false
        return
    end

    local function click(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,false,a,1)
    end

    a = 0
    --playerInfo.Position = UDim2.new(1, 0, 0, 0)


    print("HERE")
    while Spam do
        if not Character and not Character:FindFirstChild("HumanoidRootPart") then
            break
        end
        print("HERE", a)
        wait()

        a += 1

         --print(a)

        for i,v in pairs(playerInfo.body2Frame.scrollingFrame:GetChildren()) do
            if v.Name == "playerFrame" then
                if v:FindFirstChild("invite") then
                    click(v.invite)

                    wait(Invitedelay)

                    v:Destroy()
                end

            end
        end

        wait()

        click(playerInfo.refreshButton)

        wait(.3)
    end
end)



-- [[ UI Section Settings ]]

TabSettings = Window:CreateTab('UI Settings', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
UIFunctions = TabSettings:CreateSection('UI Settings')

DestroyButton = UIFunctions:CreateButton('Destroy UI', function()
    Library:DestroyUI()
end)

ToggleKeybind = UIFunctions:CreateKeybind('Toggle UI', 'E', function()
    print("Pressed")
    local UIName = 'OniHub'
    local CoreGui = game.Players.LocalPlayer.PlayerGui.CoreGui
    if CoreGui:FindFirstChild(UIName) ~= nil then
        CoreGui:FindFirstChild(UIName).Enabled = not CoreGui:FindFirstChild(UIName).Enabled
    end
end)

local TransparencySlider = UIFunctions:CreateSlider('Transparency', 0, 100, 50, Color3.fromRGB(0, 125, 255), function(Value)
    Library:SetTransparency(Value / 100, true)
end)

-- [[ UI Section Credits ]]

TabCredits = Window:CreateTab('Credits', false, 'rbxassetid://3926305904', Vector2.new(524, 44), Vector2.new(36, 36))
Section = TabCredits:CreateSection('Credits')
Paragraph = Section:CreateParagraph('Scripting [CARRY]', 'Xen(XelXel) [Xen#0018]')
Paragraph = Section:CreateParagraph('Script & Management', 'Voix(Voiix) [Voix#0001]')
Paragraph = Section:CreateParagraph('Webhooks & Management', 'Dex [Dexvo#0001]')
Paragraph = Section:CreateParagraph('UI Library', 'cal7')
end)
